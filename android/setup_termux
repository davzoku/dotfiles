#!/bin/bash
# curl -fsSL https://raw.githubusercontent.com/davzoku/dotfiles/master/android/setup_termux | bash -s -- <repository-url>

GIT_USER_NAME="Walter Teng"
GIT_USER_EMAIL="16046667+davzoku@users.noreply.github.com"

# Check if a repository URL was provided
if [ -z "$1" ]; then
  echo "Usage: $0 <repository-url>"
  exit 1
fi

REPO_URL="$1"
REPO_NAME=$(basename "$REPO_URL" .git)

# pkg update -y && pkg upgrade -y

# Set up storage permissions
termux-setup-storage

echo "Installing required packages..."
# git gh
for pkg in git gh; do
  if pkg list-installed | grep -q "^${pkg}/"; then
    echo "$pkg is already installed."
  else
    echo "Installing $pkg..."
    pkg install -y "$pkg"
  fi
done

git config --global user.name "$GIT_USER_NAME"
git config --global user.email "$GIT_USER_EMAIL"

cd ~/storage/downloads || { echo "Downloads directory not found"; exit 1; }

mkdir -p notes && cd notes

echo "Cloning repository..."
if [ ! -d "$REPO_NAME" ]; then
  git clone "$REPO_URL"
fi

echo "Marking the repository as safe for Git operations..."
# Mark the cloned repository as safe for Git operations
git config --global --add safe.directory "$HOME/storage/downloads/notes/$REPO_NAME"

# mkdir -p "$HOME/.shortcuts"

echo "Creating shortcut for git pull..."
cat << EOF > "$HOME/.shortcuts/gitpull.sh"
#!/bin/bash
cd /data/data/com.termux/files/home/storage/downloads/notes/$REPO_NAME || { echo "Repository directory not found."; exit 1; }
echo "Discarding any local changes..."
git fetch --all
git reset --hard HEAD
git clean -fd
echo "Pulling latest updates..."
git pull
EOF